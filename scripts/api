#!/bin/bash

. /etc/rc.d/init.d/functions
API_NAME="__API_NAME__"
SERVICEPATH="/opt/$API_NAME"
PIDFILE="${SERVICEPATH}/.pid"
EXEC="$API_NAME-api"
PORT=__SERVICE_PORT__
HEALTH_CHECK_URL=http://`hostname`:${PORT}/api/v1/healthcheck

get_pid() {
	cat ${PIDFILE} 2> /dev/null
}

is_running() {
	ps --no-headers -o cmd -p `get_pid` 2> /dev/null | grep ${EXEC} && echo $?
}

wait_for() {
	while ! test "$(curl -o /dev/null -s --write-out "%{http_code}" ${HEALTH_CHECK_URL})" = $1 && ((try++ < 50));
	do
		echo -n "."
		sleep 0.1
	done

	if ((try < 51)); then
		success
	else
		failure
	fi
}

start() {
	if test "$(is_running)"; then
		echo -n "ERROR: service is already running (PID: $(get_pid))";
		failure
	elif [ ! -x "$SERVICEPATH/$EXEC" ]; then
		echo -n "service $EXEC not found"
		failure
	else
		echo -n "starting $API_NAME api"
		cd $SERVICEPATH
		nohup $SERVICEPATH/$EXEC >> /tmp/$API_NAME.log 2>&1 &
		wait_for 200
	fi
	echo
}

stop() {
	echo -n "stopping $API_NAME api"
	kill `get_pid` &> /dev/null && rm -f ${PIDFILE} 2> /dev/null || true
	wait_for 000
	echo
}

status() {
	if test "$(is_running)"; then
		echo "STATUS: RUNNING PID $(get_pid)";
	else
		echo "STATUS: STOPPED"
	fi
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		start
		;;
	status)
		status
		;;
esac
