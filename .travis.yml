language: go

# Only the last two Go releases are supported by the Go team with security
# updates. Any versions older than that should be considered deprecated.
# Don't bother testing with them. tip builds your code with the latest
# development version of Go. This can warn you that your code will break
# in the next version of Go. Don't worry! Later we declare that test runs
# are allowed to fail on Go tip. (TODO: Get rid of 1.7)
go:
  # - 1.7
  - 1.8
  # - master

matrix:
  # It's ok if our code fails on unstable development versions of Go.
  allow_failures:
    - go: master
  # Don't wait for tip tests to finish. Mark the test run green if the
  # tests pass on the stable versions of Go.
  fast_finish: true

install:
  - bash -x ./scripts/dependencies.sh
  - gometalinter --install

# Anything in before_script that returns a nonzero exit code will
# flunk the build and immediately stop. It's sorta like having
# set -e enabled in bash.
before_script:
  - GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/) # All the .go files, excluding vendor/

# script always run to completion (set +e). All of these code checks are must haves
# in a modern Go project.
script:
  - ./scripts/gometalinter.sh                # One linter to rule them all
  - test -z $(gofmt -s -l $GO_FILES)         # Fail if a .go file hasn't been formatted with gofmt
  - go test -v -race ./...                   # Run all the tests with the race detector enabled
  - make build                               # do the harlem shake
after_failure:
  - reports-publisher

after_success:
  - reports-publisher

notifications:
  webhooks:
    - https://devhose.spt-engprod-pro.schibsted.io/devhose/travis

